GCC's search path situation is indeed a trainwreck, but hardcoding search
paths and thus entirely destroying our ability to control the trainwreck
and making mingw-gcc work entirely differently than every other gcc in the
universe is just not the answer, guys. --mcq

--- gcc/config/i386/mingw32.h-orig	2013-12-31 13:29:20.763040850 -0700
+++ gcc/config/i386/mingw32.h	2013-12-31 13:29:51.413040850 -0700
@@ -77,9 +77,6 @@
 #define SUB_LINK_ENTRY SUB_LINK_ENTRY32
 #endif
 
-#undef NATIVE_SYSTEM_HEADER_COMPONENT
-#define NATIVE_SYSTEM_HEADER_COMPONENT "MINGW"
-
 #undef CPP_SPEC
 #define CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{mthreads:-D_MT} " \
 		 "%{" SPEC_PTHREAD1 ":-D_REENTRANT} " \
@@ -150,19 +147,6 @@
   "%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \
   crtend.o%s"
 
-/* Override startfile prefix defaults.  */
-#ifndef STANDARD_STARTFILE_PREFIX_1
-#define STANDARD_STARTFILE_PREFIX_1 "/mingw/lib/"
-#endif
-#ifndef STANDARD_STARTFILE_PREFIX_2
-#define STANDARD_STARTFILE_PREFIX_2 ""
-#endif
-
-/* For native mingw-version we need to take care that NATIVE_SYSTEM_HEADER_DIR
-   macro contains POSIX-style path.  See bug 52947.  */
-#undef NATIVE_SYSTEM_HEADER_DIR
-#define NATIVE_SYSTEM_HEADER_DIR "/mingw/include"
-
 /* Output STRING, a string representing a filename, to FILE.
    We canonicalize it to be in Unix format (backslashes are replaced
    forward slashes.  */
